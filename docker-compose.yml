
services:
  db:
    image: postgres
    # persist data beyond lifetime of container
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=vss
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      interval: 2s
      retries: 10
  redis:
    image: redis
    # persistent storage
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: bash -c 'exec 6<>/dev/tcp/redis/6379'
      interval: 2s
      retries: 10
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8878:80"
    environment:
      PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT: 'False'
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'
      PGADMIN_DEFAULT_EMAIL: p.thapa@insign.ch
      PGADMIN_DEFAULT_PASSWORD: hssYn3EDpW5
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A vss worker -l INFO --beat --concurrency 2
    volumes:
      - .:/code
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  pgadmin-data:
